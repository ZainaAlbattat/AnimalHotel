package org.ics.servlet;
import java.io.IOException;
import java.io.PrintWriter;
import javax.ejb.EJB;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import isproject.ejb.ics.Animal;
import isproject.ejb.ics.Owner;
import isproject.facade.ics.FacadeLocal;

@WebServlet(urlPatterns = {
    "/TestServlet", 
    "/LoginServlet", 
    "/LogoutServlet"
})
public class TestServlet extends HttpServlet {
    @EJB
    private FacadeLocal facade;
    private static final long serialVersionUID = 1L;
    
    public TestServlet() {
        super();
        System.out.println("TestServlet constructor called");
    }
    
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        String servletPath = request.getServletPath();
        
        if (servletPath.equals("/TestServlet")) {
            PrintWriter out = response.getWriter();
            out.println("TestServlet-doGet");
        } else if (servletPath.equals("/LoginServlet")) {
            System.out.println("LoginServlet doGet method called"); // Debug log
            response.getWriter().println("LoginServlet-doGet");
        }
    }
    
    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        String servletPath = request.getServletPath();
        
        if (servletPath.equals("/TestServlet")) {
            handleTestServletPost(request, response);
        } else if (servletPath.equals("/LoginServlet")) {
            handleLoginPost(request, response);
        } else if (servletPath.equals("/LogoutServlet")) {
            handleLogoutPost(request, response);
        }
    }
    
    private void handleTestServletPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        try {
            String ownerFirstName = request.getParameter("ownerFirstName");
            String ownerLastName = request.getParameter("ownerLastName");
            String phone = request.getParameter("phone");
            String email = request.getParameter("email");
            String petName = request.getParameter("petName");
            String species = request.getParameter("species");
            
            Owner newOwner = new Owner();
            newOwner.setOwnerFirstName(ownerFirstName);
            newOwner.setOwnerLastName(ownerLastName);
            newOwner.setPhone(phone);
            newOwner.setEmail(email);
            
            Owner savedOwner = facade.createOwner(newOwner);
            
            if (savedOwner != null) {
                int ownerId = savedOwner.getOwnerID();
                
                Animal newAnimal = new Animal();
                newAnimal.setAnimalName(petName);
                newAnimal.setSpecies(species);
                newAnimal.setOwnerID(ownerId);
                
                Animal savedAnimal = facade.createAnimal(newAnimal);
                
                if (savedAnimal != null) {
                    // Store the owner ID in the session
                    request.getSession().setAttribute("lastCreatedOwnerId", ownerId);
                    
                    // For AJAX requests, return owner ID in the response
                    if ("XMLHttpRequest".equals(request.getHeader("X-Requested-With"))) {
                        response.setContentType("text/plain");
                        response.getWriter().write("success:" + request.getContextPath() + "/jsp/home.jsp|" + ownerId);
                    } else {
                        // For regular form submissions, redirect to home.jsp
                        response.sendRedirect(request.getContextPath() + "/jsp/home.jsp");
                    }
                } else {
                    response.setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
                    response.getWriter().write("Failed to create animal");
                }
            } else {
                response.setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
                response.getWriter().write("Failed to create owner");
            }
        } catch (Exception e) {
            e.printStackTrace();
            response.setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
            response.getWriter().write("An error occurred while processing your request");
        }
    }
    
    private void handleLoginPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        System.out.println("LoginServlet doPost method called"); // Debug log
        
        try {
            int ownerID = Integer.parseInt(request.getParameter("ownerID"));
            String phone = request.getParameter("phone");
            
            System.out.println("Attempting to log in with ownerID: " + ownerID); // Debug log
            
            // Use your existing findByOwnerId method
            Owner owner = facade.findByOwnerId(ownerID);
            
            if (owner != null && phone.equals(owner.getPhone())) {
                // Authentication successful
                HttpSession session = request.getSession();
                session.setAttribute("loggedInOwner", owner);
                session.setAttribute("ownerID", owner.getOwnerID());
                
                // Redirect to the owner dashboard
                response.sendRedirect("jsp/ownerdashboard.jsp");
            } else {
                // Authentication failed - set error message and redirect back to login
                request.setAttribute("errorMessage", "Invalid owner ID or phone number");
                request.getRequestDispatcher("LogIn.jsp").forward(request, response);
            }
        } catch (NumberFormatException e) {
            System.out.println("Invalid owner ID format: " + e.getMessage()); // Debug log
            // Handle case where ownerID is not a valid number
            request.setAttribute("errorMessage", "Invalid owner ID format");
            request.getRequestDispatcher("LogIn.jsp").forward(request, response);
        } catch (Exception e) {
            System.out.println("Error in LoginServlet: " + e.getMessage()); // Debug log
            e.printStackTrace();
            request.setAttribute("errorMessage", "An error occurred while processing your request");
            request.getRequestDispatcher("LogIn.jsp").forward(request, response);
        }
    }
    
    private void handleLogoutPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        // Get the current session
        HttpSession session = request.getSession(false);
        
        if (session != null) {
            // Invalidate the session
            session.invalidate();
        }
        
        // Redirect to home page
        response.sendRedirect("jsp/home.jsp");
    }
}